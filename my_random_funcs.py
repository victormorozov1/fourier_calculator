from math import floor

# Какие-то данные функции
a = [
    [981, 7589473, 5871, 56897105, 67183, 420, 95734, 98, 57298, 17598],
    [589, 1734895, 7134, 98579831, 47598, 173, 45897, 34, 89574, 39857],
    [198, 4357849, 3759, 18307589, 74138, 957, 43198, 57, 43897, 59148],
    [918, 2375809, 2374, 58237548, 97312, 985, 77123, 75, 89321, 45471],
    [319, 8237453, 8927, 45981237, 40987, 328, 49723, 19, 80479, 28301],
    [919, 8357321, 9075, 93597013, 25732, 189, 65723, 19, 85712, 39075],
    [894, 3720234, 8973, 20472398, 74012, 378, 94723, 91, 47932, 74031],
    [943, 2801239, 8471, 23094132, 48972, 349, 87234, 98, 72318, 94049],
    [983, 7401932, 7491, 20387489, 32749, 810, 27094, 82, 73984, 73201],
    [473, 8297409, 1237, 84021347, 89012, 374, 80912, 37, 17102, 74348],
    [748, 3291745, 8392, 70597568, 96502, 315, 98012, 37, 98457, 12349],
    [473, 2189057, 3819, 27589237, 15498, 723, 19857, 12, 39875, 39218],
    [758, 9237598, 7231, 45908732, 19857, 328, 91759, 22, 73589, 71329],
    [557, 2319875, 8923, 17590832, 17598, 537, 21598, 73, 21598, 71239],
    [875, 3892175, 9873, 21598759, 83738, 924, 78972, 35, 91057, 98417],
    [913, 2807598, 3274, 98732895, 79832, 701, 58971, 32, 95983, 12475],
    [901, 7352973, 2598, 73257893, 74589, 723, 84957, 89, 47389, 75498],
    [714, 3589745, 8975, 48975489, 17584, 978, 94579, 81, 47598, 14735],
    [897, 4398574, 9837, 59847359, 81734, 495, 14378, 94, 51370, 14535],
    [489, 1375439, 8107, 54139087, 54301, 897, 54983, 10, 74513, 98074],
]

# Какие-то функции


def get_func(y: list[int]):
    def _wrapper(x):
        return y[floor(x)]

    return _wrapper


funcs = [get_func(y) for y in a]

study = funcs[::2]
check = funcs[1::2]


from base import ClosedIntervalFunc


class Func(ClosedIntervalFunc):
    @property
    def interval_start(self) -> int | float:
        return 0

    @property
    def interval_end(self) -> int | float:
        return 9.999

    def __sub__(self, other):
        def _wrapper(*args):
            return self.func(*args) - other.func(*args)

        return Func(_wrapper)


from non_ortogonal_system import NonOrthogonalSystem


class BaseSystem(NonOrthogonalSystem):
    def stupid_get_item(self, n: int):
        return Func(study[n])


if __name__ == '__main__':
    from base import System
    system = System(BaseSystem())
    func = Func(check[0])
    for i in range(10):
        print(system.fourier_coefficient(func, i))

